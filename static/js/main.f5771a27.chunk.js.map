{"version":3,"sources":["components/header/styles/header.js","firebase.js","components/header/index.js","components/sidebar/sidebar-options/styles/sidebar-options.js","features/appSlice.js","components/sidebar/sidebar-options/index.js","components/sidebar/styles/sidebar.js","components/sidebar/index.js","components/chat/styles/chat.js","components/chat/chat-input/styles/chatInput.js","components/chat/chat-input/index.js","components/chat/message/styles/message.js","components/chat/message/index.js","components/chat/index.js","components/login/styles/login.js","components/login/index.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","div","HeaderLeft","HeaderSearch","HeaderRight","HeaderAvatar","Avatar","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","alt","displayName","src","photoURL","onClick","signOut","AccessTime","Search","type","placeholder","HelpOutline","SidebarOptionsContainer","SelectedSidebarOptionsContainer","SidebarOptionsChannel","h3","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOptions","Icon","title","id","click","useSelector","dispatch","useDispatch","handleOnClick","console","log","channelName","prompt","collection","add","addChannel","disabled","fontSize","style","padding","SidebarContainer","SidebarHeader","SidebarInfo","Sidebar","useCollection","channels","useState","showOptions","setShowOptions","showChannels","setShowChannels","toogleShowOptions","toogleShowChannels","className","role","contentEditable","FiberManualRecord","Create","ExpandMore","InsertComment","Inbox","Drafts","BookmarkBorder","PeopleAlt","Apps","FileCopy","ExpandLess","Add","docs","map","doc","data","ChatContainer","ChatHeader","ChatHeaderRight","ChatHeaderLeft","ChatMessages","ChatBottom","ChatInputContainer","ChatInput","channelId","chatRef","input","setInput","value","onChange","e","target","Button","hidden","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","MessageContainer","MessageInfo","Message","toDate","Date","toUTCString","Chat","useDocument","roomDetails","orderBy","roomMessages","loading","useRef","useEffect","StarBorderOutlined","InfoOutlined","ref","LoginContainer","LoginInnerContainer","Login","signInWithPopup","catch","error","alert","AppBody","AppLoadingContainer","AppLoadingContents","App","color","fadeIn","basename","process","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5771a27.chunk.js","sourcesContent":["import styled from \"styled-components/macro\"\nimport {Avatar} from \"@material-ui/core\"\n\nexport const HeaderContainer = styled.div`\n    display:flex;\n    position:fixed;\n    width:100%;\n    align-items:center;\n    padding:10px 0px;\n    background-color: var(--slack-header-color);\n    color:white\n\n\n`;\nexport const HeaderLeft = styled.div `\n    display:flex;\n    flex:0.3;\n    align-items:center;\n    margin-left:20px;\n    \n    > .MuiSvgIcon-root{\n        margin-left:auto;\n        margin-right:30px;\n        color:#f8f8f8;\n    }\n\n\n    \n`;\n\nexport const HeaderSearch = styled.div `\n    flex:0.4;\n    opacity:1;\n    border-radius:6px;\n    background-color:#2F343D;\n    text-align:center;\n    display:flex;\n    padding:0 50px;\n    color:gray;\n    border:1px solid gray;\n\n    > input{\n        background-color:transparent;\n        border:none;\n        text-align:center;\n        min-width:30vw;\n        color:white;\n        outline:none\n    }\n`;\n\nexport const HeaderRight = styled.div `\n    flex:0.3;\n    display:flex;\n    align-items:flex-end;\n\n    > .MuiSvgIcon-root{\n        margin-left:auto;\n        margin-right:20px;\n        color:#f8f8f8\n\n    }\n`;\n\nexport const HeaderAvatar = styled(Avatar)`\n    cursor:pointer;\n    :hover{\n        opacity:0.8;\n    }\n`;\n\n\n","import firebase from \"firebase\"\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCfrbUng_LyJ912BYONWGBiQv85gQPhpOI\",\n    authDomain: \"slack-d83fc.firebaseapp.com\",\n    projectId: \"slack-d83fc\",\n    storageBucket: \"slack-d83fc.appspot.com\",\n    messagingSenderId: \"212806521313\",\n    appId: \"1:212806521313:web:bcea600281421fc35a42a0\"\n  };\n  \nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport {auth,provider,db};","import { AccessTime, HelpOutline, Search } from '@material-ui/icons'\nimport React from 'react'\nimport {\nHeaderContainer,\nHeaderLeft,\nHeaderSearch,\nHeaderRight,\nHeaderAvatar} from \"./styles/header\"\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport {auth} from '../../firebase'\nexport default function Header() {\n    const [user] = useAuthState(auth);\n    return (\n       <HeaderContainer>\n            <HeaderLeft>\n                <HeaderAvatar\n                    alt={user?.displayName}\n                    src={user?.photoURL}\n                    onClick={()=>auth.signOut()}\n                />\n                <AccessTime/>\n\n            </HeaderLeft>\n            <HeaderSearch>\n                <Search/>\n                <input type=\"text\" placeholder=\"Search Kalp\"/>\n            </HeaderSearch>\n            <HeaderRight>\n                <HelpOutline/>\n            </HeaderRight>\n       </HeaderContainer>\n    )\n}\n\n","import styled from \"styled-components/macro\"\n\nexport const SidebarOptionsContainer = styled.div`\n    display:flex;\n    align-items:center;\n    font-size:12px;\n    padding-left:2px;\n    cursor: pointer;\n    :hover{\n        background-color:#2F343D;\n        opacity:0.9\n    }\n    > h3{\n        font-weight:500;\n    }\n\n    > h3 >span{\n        padding:15px;\n    }\n    \n`;\n\nexport const SelectedSidebarOptionsContainer = styled.div`\n    display:flex;\n    align-items:center;\n    font-size:12px;\n    padding-left:2px;\n    cursor: pointer;\n    background-color:var(--slack-selected-color);\n    :hover{\n        opacity:0.9\n    }\n    > h3{\n        font-weight:500;\n    }\n\n    > h3 >span{\n        padding:15px;\n    }\n    \n`;\n\nexport const SidebarOptionsChannel =styled.h3 `\n    padding:10px 0px;\n    font-weight:300;\n`;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    roomId: null,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state,action) => {\r\n      state.roomId = action.payload.roomId;\r\n    } \r\n  },\r\n});\r\n\r\nexport const { enterRoom} = appSlice.actions;\r\n\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react'\nimport { db } from '../../../firebase';\nimport {\nSidebarOptionsContainer,\nSidebarOptionsChannel,\nSelectedSidebarOptionsContainer\n} from './styles/sidebar-options'\nimport {useDispatch, useSelector} from 'react-redux';\nimport {enterRoom, selectRoomId}  from '../../../features/appSlice'\nexport default function SidebarOptions({Icon,title,id,type,click}) {\n    const roomId = useSelector(selectRoomId)\n\n    const dispatch = useDispatch();\n    const addChannel = ()=>{\n        const channelName = prompt('Please enter the channel name');\n\n        if(channelName)\n        {\n            db.collection('rooms').add({\n                name:channelName,\n            })\n        }\n    };\n    const selectChannel=()=>{\n        if(id){\n            console.log(\"Sidebar-options\",id)\n            dispatch(enterRoom({\n                roomId: id\n            }));\n        }\n\n      \n    };\n    const handleOnClick =()=>{\n        switch(type)\n        {\n            case (\"channel\"):\n                {\n                    selectChannel();\n                    break;\n                }\n            case (\"addChannel\"):\n                {\n                    addChannel();\n                    break;\n                }\n            default:{\n                console.log(\"default Case\");\n            }\n\n\n        }\n\n    }\n    if(roomId===id)\n    {\n        return (\n            <SelectedSidebarOptionsContainer \n            onClick={click?click:handleOnClick}\n            disabled={false}\n        >\n            {Icon && <Icon fontSize=\"small\" style={{padding:10}}/>}\n            {Icon ? (\n                <h3>{title}</h3>\n            ):(\n                <SidebarOptionsChannel>\n                    <span>#</span>{title}\n                </SidebarOptionsChannel>\n            )}\n        </SelectedSidebarOptionsContainer>\n        )\n    }\n    \n    return (\n        <SidebarOptionsContainer \n            onClick={click?click:handleOnClick}\n            disabled={false}\n        >\n            {Icon && <Icon fontSize=\"small\" style={{padding:10}}/>}\n            {Icon ? (\n                <h3>{title}</h3>\n            ):(\n                <SidebarOptionsChannel>\n                    <span>#</span>{title}\n                </SidebarOptionsChannel>\n            )}\n        </SidebarOptionsContainer>\n    )\n}\n","import styled from \"styled-components/macro\"\n\nexport const SidebarContainer = styled.div `\n    background-color:var(--slack-sidebar-color);\n    color:white;\n    flex:0.3;\n    border-top:1px solid #222222;\n    max-width:260px;\n    margin-top:60px;\n\n    >hr {\n        margin-top:10px;\n        margin-bottom:10px;\n        border:1px solid #333333\n    }\n  \n`;\n\nexport const SidebarHeader = styled.div `\n    display:flex;\n    border-bottom:2px solid #333333;\n    padding:13px;\n   \n    > .MuiSvgIcon-root{\n        padding:8px;\n        color:var(--slack-sidebar-color);\n        background-color:white;\n        font-size:18px;\n        border-radius:100%\n\n    }\n\n`;\n\nexport const SidebarInfo = styled.div `\n    flex:1;\n   \n    > span{\n        font-size:15px;\n        font-weight:900;\n        margin-bottom:5px;\n        outline:none\n    }\n\n    > h3{\n        display:flex;\n        font-size:13px;\n        font-weight:400;\n        align-items:center\n    }\n    > h3 > .MuiSvgIcon-root{\n       font-size:14px;\n       margin-top:1px;\n       margin-right:2px;\n       color:green; \n    }\n`;\n\n","import { Add, Apps, BookmarkBorder, Create, Drafts, ExpandLess, ExpandMore, FiberManualRecord, FileCopy, Inbox, InsertComment, PeopleAlt } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport { auth, db } from '../../firebase'\nimport SidebarOptions from './sidebar-options'\nimport {\nSidebarContainer,\nSidebarHeader,\nSidebarInfo} from './styles/sidebar'\nimport {useCollection} from \"react-firebase-hooks/firestore\"\nimport { useAuthState } from 'react-firebase-hooks/auth'\nexport default function Sidebar() {\n    const [user] = useAuthState(auth)\n    const [channels] = useCollection(db.collection(\"rooms\"));\n    const [showOptions,setShowOptions] = useState(false);\n    const [showChannels,setShowChannels] = useState(false);\n    const toogleShowOptions=()=>{\n        setShowOptions(showOptions=>!showOptions);\n    }\n    const toogleShowChannels=()=>{\n        setShowChannels(showChannels=>!showChannels);\n    }\n\n    return (\n        <SidebarContainer>\n            <SidebarHeader>\n                <SidebarInfo>\n                  <span className=\"input\" role=\"textbox\" contentEditable={true}>Kalp's Slack</span>\n                    <h3>\n                        <FiberManualRecord/>\n                        {user.displayName}\n                    </h3>\n                </SidebarInfo>\n                <Create />\n            </SidebarHeader>\n            {!showOptions && (<SidebarOptions Icon={ExpandMore} click={toogleShowOptions} title=\"ShowMore\" />)}\n            {showOptions && (\n            <>\n            <SidebarOptions Icon={InsertComment} title=\"Threads\"/>\n            <SidebarOptions Icon={Inbox} title=\"Mentions & reactions\"/>\n            <SidebarOptions Icon={Drafts} title=\"Saved items\"/>\n            <SidebarOptions Icon={BookmarkBorder} title=\"Channel browser\"/>\n            <SidebarOptions Icon={PeopleAlt} title=\"People and user group\"/>\n            <SidebarOptions Icon={Apps} title=\"Apps\"/>\n            <SidebarOptions Icon={FileCopy} title=\"File browser\"/>\n            <SidebarOptions Icon={ExpandLess} title=\"Show less\" click={toogleShowOptions}/>\n            </>\n            )}\n            \n            <hr/>  \n               \n            {!showChannels && (\n                <>\n                <SidebarOptions Icon={ExpandMore} click={toogleShowChannels} title=\"channel\"/>\n                </>\n            )}\n            {showChannels && (\n            <>\n            <SidebarOptions Icon={ExpandLess} click={toogleShowChannels} title=\"channel\"/>\n\n            <SidebarOptions Icon={Add} type=\"addChannel\" click={toogleShowChannels} title=\"Add Channel\"/>   \n\n            {\n                channels?.docs.map((doc)=>(\n                    <SidebarOptions\n                        key={doc.id}\n                        id={doc.id}\n                        title={doc.data().name}\n                        type=\"channel\"\n\n                    />\n                ))\n            }\n            </>\n            )}\n            <hr/>\n\n\n\n\n\n\n        </SidebarContainer>\n    )\n}\n","import styled from \"styled-components/macro\"\n\nexport const ChatContainer = styled.div `\n    flex:0.7;\n    flex-grow:1;\n    overflow-y:scroll;\n    margin-top:60px;\n`;\n\nexport const ChatHeader = styled.div `\n    display:flex;\n    justify-content:space-between;\n    padding:20px;\n    border-bottom:1px solid lightgray;\n`;\n\nexport const ChatHeaderRight = styled.div `\n    >p{\n        display:flex;\n        align-items:center;\n        font-size:14px\n    }\n    > p > .MuiSvgIcon-root{\n        margin-right:10px;\n        font-size:18px;\n    }\n`;\n\nexport const ChatHeaderLeft = styled.div `\n    display:flex;\n    align-items:center;\n    .h4{\n        display:flex;\n        text-transform:lowercase\n    }\n\n    > .MuiSvgIcon-root{\n        margin-left:10px;\n        font-size:18px;\n    }\n`;\n\nexport const ChatMessages = styled.div `\n    \n`;\nexport const ChatBottom = styled.div `\n    padding-bottom:200px;\n`;\n","import styled from 'styled-components';\n\nexport const ChatInputContainer = styled.div`\n    border-radius:20px;\n\n    >form {\n        position:relative;\n        display:flex;\n        justify-content:center;\n    }\n    >form >input{\n        position:fixed;\n        bottom:30px;\n        width:60%;\n        border:1px solid gray;\n        border-radius:3px;\n        padding:20px;\n        outline:none;\n    }\n\n    >form >button{\n        display:none !important\n    }\n\n\n`;","import { Button } from '@material-ui/core'\nimport React,{useState} from 'react'\nimport { ChatInputContainer } from './styles/chatInput'\nimport {db,auth} from \"../../../firebase\";\nimport firebase from 'firebase';\nimport {useAuthState} from 'react-firebase-hooks/auth';\nexport default function ChatInput({channelName,channelId,chatRef}) {\n    const [input,setInput]=useState(\"\");\n    const [user] = useAuthState(auth);\n    const sendMessage = e=>{\n        e.preventDefault();\n        \n        if(!channelId){\n            return false;\n        }\n        db.collection('rooms').doc(channelId).collection(\"messages\").add({\n            message: input,\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n            user:user.displayName,\n            userImage:user.photoURL\n        });\n        chatRef?.current?.scrollIntoView({\n            behavior:\"smooth\",\n        });\n        setInput(\"\");\n    } \n    return (\n     \n        <ChatInputContainer>\n            <form>\n                <input \n                value={input}\n                onChange={(e)=>setInput(e.target.value)} \n                placeholder = {`Message #${channelName}`}\n\n\n                />\n                <Button hidden type = 'submit' onClick={sendMessage}>\n                    Send\n                </Button>\n            </form>\n        </ChatInputContainer>\n    )\n}\n","import styled from 'styled-components/macro'\n\nexport const MessageContainer= styled.div `\n    display:flex;\n    align-items:center;\n    padding:20px;\n\n    > img{\n        height:50px;\n        border-radius:8px;\n    }\n`;\nexport const MessageInfo = styled.div `\n    padding-left: 10px;\n    > h4 > span{\n        color:gray;\n        font-weight:300;\n        margin-left:4px;\n        font-size:10px;\n    }\n`;","import React from 'react'\nimport { MessageContainer,MessageInfo } from './styles/message'\n\nexport default function Message({message,timestamp,user,userImage}) {\n    console.log(\"message\",timestamp?.toDate())\n    return (\n        <MessageContainer>\n            <img src={userImage} alt=\"userImage\"/> \n            <MessageInfo>\n                <h4>\n                    {user} <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\n                </h4>\n                <p>{message}</p>\n            </MessageInfo>\n        </MessageContainer>\n    )\n}\n","import { InfoOutlined, StarBorderOutlined } from '@material-ui/icons'\nimport React, { useRef,useEffect } from 'react'\nimport { ChatContainer, ChatHeader, ChatHeaderLeft, ChatHeaderRight, ChatMessages,ChatBottom } from './styles/chat'\nimport ChatInput from './chat-input'\nimport { selectRoomId } from '../../features/appSlice'\nimport {useSelector} from \"react-redux\"\nimport {useDocument,useCollection} from 'react-firebase-hooks/firestore'\nimport {db} from '../../firebase'\nimport Message from './message'\nexport default function Chat() {\n    const roomId = useSelector(selectRoomId)\n    const [roomDetails]=useDocument(\n        roomId && db.collection('rooms').doc(roomId)\n    );\n    const [roomMessages,loading] = useCollection(\n        roomId && db.collection('rooms').doc(roomId).collection('messages').orderBy(\"timestamp\",\"asc\")\n    );\n    const chatRef =useRef(null);\n    useEffect(() => {\n       chatRef?.current?.scrollIntoView({\n           behavior:\"smooth\",\n       });\n    }, [roomId,loading])\n    console.log(\"from chat\",roomMessages?.docs)\n    return (\n        <ChatContainer>\n        {roomDetails &&(\n        <>\n            <ChatHeader>\n                <ChatHeaderLeft>\n                    <h4>\n                        <strong>#{roomDetails?.data().name}</strong>\n                    </h4>\n                    <StarBorderOutlined/>\n                </ChatHeaderLeft>\n                <ChatHeaderRight>\n                    <p>\n                        <InfoOutlined/> Details\n                    </p>\n                </ChatHeaderRight>\n            </ChatHeader>\n            <ChatMessages>\n                {roomMessages?.docs.map((doc)=>{\n                    const {message,timestamp,user,userImage}=doc.data();\n                    return (\n                        <Message\n                           key={doc.id}\n                           message={message} \n                           timestamp={timestamp}\n                           user={user}\n                           userImage={userImage}\n                        />\n                    )\n                })}\n            </ChatMessages>\n            <ChatBottom ref={chatRef} />\n            <ChatInput  \n            chatRef={chatRef}\n            channelName={roomDetails?.data().name}\n            channelId={roomId}>\n               \n            </ChatInput>\n        </>\n        )}\n        </ChatContainer>\n    )\n}\n","import styled from 'styled-components/macro';\n\nexport const LoginContainer = styled.div `\n\n    background-color:#f8f8f8;\n    height:100vh;\n    display:grid;\n    place-items:center\n\n`;\n\nexport const LoginInnerContainer = styled.div `\n\n    padding:100px;\n    text-align:center;\n    background-color:white;\n    border-radius:10px;\n    box-shadow:0 1px 3px rgba(0,0,0,0.12),0 1px 2px rgba(0,0,0,0.24);\n    >img{\n        object-fit:contain;\n        height:100px;\n        margin-bottom:40px\n    }\n\n    >button{\n        margin-top:50px;\n        text-transform:inherit !important;\n        background-color:#0a8d48;\n        color:white\n    }\n`;\n","import { Button } from '@material-ui/core'\nimport React from 'react'\nimport { LoginContainer, LoginInnerContainer } from './styles/login'\nimport {auth,provider} from '../../firebase';\n\nexport default function Login() {\n    const signIn =e=>{\n        e.preventDefault();\n        auth.signInWithPopup(provider).catch((error)=>alert(error.message));\n    }\n    return (\n        <LoginContainer>\n            <LoginInnerContainer>\n                <img src={\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd-1024-80.jpg.webp\"} alt=\"logo\"/>\n                <h1>Sign in to the Fam</h1>\n                <p>BLah blah blah</p>\n                <Button  onClick={signIn}>Sign in with google</Button>\n            </LoginInnerContainer>\n        </LoginContainer>\n    )\n}\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport {Header,Sidebar,Chat,Login} from './components'\r\nimport styled from \"styled-components/macro\"\r\nimport {auth} from \"./firebase\"\r\nimport {useAuthState} from \"react-firebase-hooks/auth\"\r\nimport './App.css';\r\nimport Spinner from 'react-spinkit';\r\n\r\nfunction App() {\r\n  const [user,loading] = useAuthState(auth);\r\n  if(loading)\r\n  return (\r\n    <AppLoadingContainer>\r\n    <AppLoadingContents>\r\n    <img src={\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd-1024-80.jpg.webp\"} alt=\"logo\"/>\r\n    <Spinner\r\n    name =\"ball-spin-fade-loader\"\r\n    color=\"purple\"\r\n    fadeIn=\"none\"\r\n    />\r\n\r\n   \r\n    </AppLoadingContents>\r\n  </AppLoadingContainer>\r\n  )\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n      {!user ?(\r\n        <Login/>\r\n      ):(<>\r\n      <Header/>\r\n      <AppBody>\r\n      <Sidebar/>\r\n      <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Chat/>\r\n          </Route>\r\n         \r\n        </Switch>\r\n      </AppBody>\r\n       \r\n      </>)}\r\n      \r\n    </Router>\r\n    </div>\r\n  );\r\n}\r\nconst AppBody = styled.div `\r\n    display:flex;\r\n    height:100vh\r\n`;\r\n\r\nexport const AppLoadingContainer = styled.div `\r\n  display:grid;\r\n  place-items:center;\r\n  height:100vh;\r\n  width:100%\r\n`;\r\n\r\nexport const AppLoadingContents = styled.div `\r\ntext-align:center;\r\npadding-bottom:100px;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:center;\r\nalign-items:center;\r\n>img{\r\n    height:100px;\r\n    padding:20px;\r\n    margin-bottom:40px\r\n}\r\n`;\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}